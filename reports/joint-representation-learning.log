Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.cluster import MiniBatchKMeans
import time

def cluster(alpha, L, XXt, *, n_clusters):
    L_ = L + alpha*XXt
    latents, _, _ = scipy.linalg.svd(L_)
    latents = latents[:, :n_clusters]
    return latents


start = time.perf_counter()
tuning_range = np.linspace(amin, amax, num=10)
alphas = {}
for alpha in tuning_range:
    L_ = L + alpha*XXt
    latents = embed(L_, n_clusters=K)
    kmeans = MiniBatchKMeans(n_clusters=K)
    kmeans.fit(latents)
    alphas[alpha] = kmeans.inertia_

best_alpha = min(alphas, key=alphas.get)
print(f"Our best alpha-value is {best_alpha:0.8f}")

latents = embed(L+best_alpha*XXt, n_clusters=K)
plot_latents(latents, title="Our embedding after tuning", labels=labels)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-12-16dcc83a7a00>[0m in [0;36m<module>[0;34m[0m
[1;32m     14[0m [0;32mfor[0m [0malpha[0m [0;32min[0m [0mtuning_range[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m     [0mL_[0m [0;34m=[0m [0mL[0m [0;34m+[0m [0malpha[0m[0;34m*[0m[0mXXt[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m     [0mlatents[0m [0;34m=[0m [0membed[0m[0;34m([0m[0mL_[0m[0;34m,[0m [0mn_clusters[0m[0;34m=[0m[0mK[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     17[0m     [0mkmeans[0m [0;34m=[0m [0mMiniBatchKMeans[0m[0;34m([0m[0mn_clusters[0m[0;34m=[0m[0mK[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     18[0m     [0mkmeans[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mlatents[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: embed() got an unexpected keyword argument 'n_clusters'
TypeError: embed() got an unexpected keyword argument 'n_clusters'

